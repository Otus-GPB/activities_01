package otus.gpb.homework.activities

import android.Manifest
import android.app.Activity
import android.content.DialogInterface
import android.content.Intent
import android.content.Intent.ACTION_SEND
import android.content.Intent.EXTRA_TEXT
import android.content.pm.PackageManager
import android.graphics.BitmapFactory
import android.net.Uri
import android.os.Bundle
import android.provider.Settings
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.activity.result.ActivityResult
import androidx.activity.result.ActivityResultCallback
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.widget.Toolbar
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import com.google.android.material.dialog.MaterialAlertDialogBuilder


private const val PERMISSION_REQUEST_CODE = 101

class EditProfileActivity : AppCompatActivity() {

    private lateinit var imageView: ImageView

    private fun requestPermission() {

        val D = ActivityCompat.shouldShowRequestPermissionRationale(
            this,
            Manifest.permission.CAMERA
        )

        if (D) {
            //–í—ã–∑–æ–≤ Rationale Dialog
            showRationaleDialog(this)
        } else {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(Manifest.permission.CAMERA),
                PERMISSION_REQUEST_CODE
            )

        }


    }

    // –ü–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Runtime Permission
    // –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã. –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:
    //
    //
    // 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–¥–∞–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã ‚Üí –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ –≤ ImageView —Ä–µ—Å—É—Ä—Å `R.drawable.cat`
    //         2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–∑—Ä–µ—à–∏–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–º–µ—Ä—É –ø–µ—Ä–≤—ã–π —Ä–∞–∑ ‚Üí –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    //  3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ —Ä–∞–∑ –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã ‚Üí –ø–æ–∫–∞–∂–∏—Ç–µ Rationale Dialog,
    //  –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ –∑–∞—á–µ–º –≤–∞–º –∫–∞–º–µ—Ä–∞

    private fun onClick1(dialog: DialogInterface, which: Int) {
        //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—É–Ω–∫—Ç –º–µ–Ω—é=0 (–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ), —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã
        if (which == 0) {

            //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤ ImageView —Ä–µ—Å—É—Ä—Å `R.drawable.cat`
            //–µ—Å–ª–∏ –Ω–µ —Ä–∞–∑—Ä–µ—à–∏–ª, –Ω–æ –µ—â–µ —Ä–∞–∑–∑ –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Rationale Dialog —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –∑–∞—á–µ–º –Ω—É–∂–Ω–∞ –∫–∞–º–µ—Ä–∞ –∏
            //–∫–Ω–æ–ø–∫–∞–º–∏ - ‚Äú–î–∞—Ç—å –¥–æ—Å—Ç—É–ø‚Äù –∏ ‚Äú–û—Ç–º–µ–Ω–∞‚Äù. –ü–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–î–∞—Ç—å –¥–æ—Å—Ç—É–ø‚Äù –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–û—Ç–º–µ–Ω–∞‚Äù –∑–∞–∫—Ä–æ–π—Ç–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ

            //–µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–∫–æ–Ω—Ç–µ–∫—Å—Ç —ç—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ç–∏, –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è) == –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
            //—Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —Ä–∞–Ω–µ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è
            if (ContextCompat.checkSelfPermission(
                    this,
                    Manifest.permission.CAMERA
                ) == PackageManager.PERMISSION_GRANTED
            ) {
                showImage()

                // –∏–Ω–∞—áe
                //–∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–º–∏—à–∏–æ–Ω - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã
            } else
                requestPermission()


        } else
            takePictureFromGallery()
    }

    private fun showRationaleDialog(context: Activity) {
        val show = MaterialAlertDialogBuilder(context)
            .setTitle(resources.getString(R.string.title))
            .setMessage(
                resources.getString(
                    R.string.supporting_text
                )
            )

            .setNegativeButton(resources.getString(R.string.decline)) { dialog, which ->
                // Respond to negative button press
            }
            .setPositiveButton(resources.getString(R.string.accept)) { dialog, which ->
                // Respond to positive button press
                ActivityCompat.requestPermissions(
                    this,
                    arrayOf(Manifest.permission.CAMERA),
                    PERMISSION_REQUEST_CODE
                )
            }
            .show()
    }

    private fun showSettingsDialog(context: Activity) {
        val show = MaterialAlertDialogBuilder(context)
            .setTitle(resources.getString(R.string.title))
            .setMessage(
                resources.getString(
                    R.string.settings_text
                )
            )

            .setPositiveButton(resources.getString(R.string.settings_text)) { dialog, which ->
                // Respond to positive button press
                openApplicationSettings()
            }
            .show()
    }

    private fun openApplicationSettings() {
        val appSettingsIntent = Intent(
            Settings.ACTION_APPLICATION_DETAILS_SETTINGS,
            Uri.parse("package:$packageName")
        )
        startActivityForResult(appSettingsIntent, PERMISSION_REQUEST_CODE)
    }

    // –ü–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ‚Äù –æ—Ç–∫—Ä–æ–π—Ç–µ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–ª–µ—Ä–µ–∏,
    // –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ URI —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ `ActivityResultCallback` –≤—ã–∑–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ `populateImage`,
    // —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ ImageView
    //
    //üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–∑ –∫–ª–∞—Å—Å–∞ `ActivityResultContracts` –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∏–∫–µ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤

    private fun showImage() {
        //–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤ ImageView —Ä–µ—Å—É—Ä—Å `R.drawable.cat`
        // –≤—ã–∑—ã–≤–∞–µ–º getDrawable –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        //–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π bd –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Ä–µ—Å—Ä—Å–æ–≤ (id —Ä–µ—Å—É—Ä—Å–∞) –≤ –ø—Ä–∏–≥–æ–¥–Ω–æ –≤–∏–¥–µ –¥–ª—è –ø–æ–º–µ—â–µ–Ω–∏—è –≤ imageView, –∞ –∏–º–µ–Ω–Ω–æ –≤ –≤–∏–¥–µ —Ç–∏–ø–∞ BitmapDrawable
        val bd = this.getResources().getDrawable(R.drawable.cat);

        //–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é imageView  –ø–æ–º–µ—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π  findViewById "–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ –Ω–∞–π—Ç–∏ View –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∞–π–¥–∏"
        // –∫–æ—Ç–æ—Ä–æ–π –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö –∞–π–¥–∏ –Ω—É–∂–Ω–æ–≥–æ –Ω–∞–º —ç–ª–µ–º–µ–Ω—Ç–∞ imageView —Å –Ω–∞—à–µ–≥–æ —ç–∫—Ä–∞–Ω–∞ ( –∞–∫—Ç–∏–≤–∏—Ç–∏)
        imageView = findViewById<ImageView>(R.id.imageview_photo)

        // —É —Ä–∞–Ω–µ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ imageView –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ setImageDrawable "–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É Drawable" - —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∞–∑–Ω–∞—á–µ—Ç –≤ ImageView —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É,
        // –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Ç–∏–ø Drawable –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–π —Ç–∏–ø –æ—Ç –Ω–µ–≥–æ. –†–∞–Ω–µ–µ –º—ã —Å–æ–∑–¥–∞–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é bd —Å —Ç–∏–ø–æ–º BitmapDrawable
        imageView.setImageDrawable(bd)
    }

    val openFillFormActivityLaunch =
        registerForActivityResult(ActivityResultContracts.StartActivityForResult(),

            object : ActivityResultCallback<ActivityResult> {
                override fun onActivityResult(result: ActivityResult) {
                    if (result.resultCode == Activity.RESULT_OK) {
                        val intent = result.data
                        // Handle the Intent
                        val arguments = intent!!.extras
                        val name = arguments!!["name"].toString()
                        val surname = arguments!!["surname"].toString()
                        val age = arguments!!["age"].toString()

                        findViewById<TextView>(R.id.textview_name).text = name
                        findViewById<TextView>(R.id.textview_surname).text = surname
                        findViewById<TextView>(R.id.textview_age).text = age
                    }
                }

            }

        )


    private fun takePictureFromGallery() {
        getContent.launch("image/*")

    }

    val getContent = registerForActivityResult(ActivityResultContracts.GetContent())
    { uri: Uri? -> populateImage(uri!!)

        // Handle the returned Uri
    }

    lateinit var myUri : Uri


    private fun openFillFormActivity() {
        openFillFormActivityLaunch.launch(Intent(this, FillFormActivity::class.java))

    }


    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)

        if (ContextCompat.checkSelfPermission(
                this,
                Manifest.permission.CAMERA
            ) == PackageManager.PERMISSION_GRANTED
        ) {
            showImage()
        } else {

            val D = ActivityCompat.shouldShowRequestPermissionRationale(
                this,
                Manifest.permission.CAMERA
            )
            if (D) {

            } else showSettingsDialog(this)
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_edit_profile)
        imageView = findViewById<ImageView>(R.id.imageview_photo)


        // –í –∫–ª–∞—Å—Å–µ EditProfileActivity –ø–æ –∫–ª–∏–∫—É –Ω–∞ ImageView —Å id=imageview_photo

        imageView.setOnClickListener {

            //–æ–±—ä—è–≤–∏–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∏–º–µ–Ω–µ–º items –∏ —Å—Ä–∞–∑—É –ø—Ä–∏—Å–≤–æ–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
            val items = arrayOf("–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ", "–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ")

            //–ø–æ–∫–∞–∂–∏—Ç–µ Alert Dialog —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –¥–∏–∞–ª–æ–≥–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é
            //–≤ –ø—Ä–∏–º–µ—Ä–µ, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –¥–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã ‚Äú–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ‚Äù –∏ ‚Äú–í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ‚Äù

            //—Å–æ–∑–¥–∞—é –¥–∏–∞–ª–æ–≥
            MaterialAlertDialogBuilder(this)
                //—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ (—Ä–µ—Å—É—Ä—Å—ã.–≤–∑—è—Ç—å —Å—Ç—Ä–æ–∫—É(–Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏))
                .setTitle(resources.getString(R.string.title))
                //—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã (—Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç)
                .setItems(items, { dialog, which -> onClick1(dialog, which) })
                //–ø–æ–∫–∞–∑–∞—Ç—å
                .show()
        }

        var settingProfile = findViewById<Button>(R.id.Setting_Profile)
        settingProfile.setOnClickListener {
            openFillFormActivity()

        }

        findViewById<Toolbar>(R.id.toolbar).apply {
            inflateMenu(R.menu.menu)
            setOnMenuItemClickListener {
                when (it.itemId) {
                    R.id.send_item -> {
                        openSenderApp()
                        true
                    }
                    else -> false
                }
            }
        }
    }


    /** private fun requestPermission() {
    ActivityCompat.requestPermissions(
    activity,
    arrayOf(Manifest.permission.CAMERA),
    PERMISSION_REQUEST_CODE
    )
    }


     * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–∑ –º–µ–¥–∏–∞—Ç–µ–∫–∏ –≤ ImageView
     */
    private fun populateImage(uri: Uri) {
        myUri = uri
        val bitmap = BitmapFactory.decodeStream(contentResolver.openInputStream(uri))
        imageView.setImageBitmap(bitmap)
    }


    private fun openSenderApp() {

        var photo = findViewById<ImageView>(R.id.imageview_photo)

        var name = findViewById<TextView>(R.id.textview_name).text
        var surname = findViewById<TextView>(R.id.textview_surname).text
        var age = findViewById<TextView>(R.id.textview_age).text
        var content =  "$name \n $surname \n $age"

        val i = Intent(Intent.ACTION_SEND)
        i.type = "image/jpeg"
        val intent = i.setPackage("org.telegram.messenger")


        i.putExtra(Intent.EXTRA_TEXT, content)
        i.putExtra(Intent.EXTRA_STREAM, myUri)
        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)


        startActivity(i)
    }

    //  TODO("–í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—è–≤–Ω—ã–π Intent —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ—Ñ–∏–ª–µ–º. –í –∫–∞—á–µ—Å—Ç–≤–µ extras –ø–µ—Ä–µ–¥–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É")
}



